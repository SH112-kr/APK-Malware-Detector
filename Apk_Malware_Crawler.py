import ipaddress
#from IPv4Address import ipaddress
import csv
import requests
import site_list
import Scan_site_SSH
import threading
from multiprocessing import Process
import time
from concurrent import futures

start_ip0 = []
end_ip0 = []
start_ip1 = []
end_ip1 = []
start_ip2 = []
end_ip2 = []
start_ip3 = []
end_ip3 = []
start_ip4 = []
end_ip4 = []
for i in range(4):
    with open(f"C:\\Users\\SSH\\Desktop\\python_code\\python\\Center\\Apk_Malware_Crawler\\TW_ipadress"+str(i+1)+".csv",'r',encoding='utf-8-sig')as f:
        rdr = csv.reader(f)

        for line in rdr:
            globals()['start_ip'+str(i)].append(ipaddress.ip_address(line[0]))
            globals()['end_ip'+str(i)].append(ipaddress.ip_address(line[1]))
        

def Scrap(c):
    for i,s in enumerate(globals()['end_ip'+str(c)]):
        sensor = True
        a = globals()['start_ip'+str(c)][i]
        b = globals()['end_ip'+str(c)][i]
        while(sensor):
            if a ==b:
                sensor = False
            try:
                
                #print(str(a))
                r = requests.get('http://'+str(a),timeout=0.1)
                #print(str(a)+":" + str(r.status_code))
                if r.status_code == 200:
                    hi = Scan_site_SSH.AutoExtractor.scanSiteMain(str(a))
                    print(str(a)+":" + hi)
            except:
                #print(str(a)+": "+"400")
                pass
            a+=1

if __name__ == '__main__':
    print("[*]APK Malware Detector[*]")
    start = time.perf_counter()
    
    crawler_t1 = Process(target = Scrap, args =(0,))
    crawler_t2 = Process(target = Scrap, args =(1,))
    crawler_t3 = Process(target = Scrap, args =(2,))
    crawler_t4 = Process(target = Scrap, args =(3,))
    crawler_t5 = Process(target = Scrap, args =(4,))
    crawler_t1.start()
    crawler_t2.start()
    crawler_t3.start()
    crawler_t4.start()
    crawler_t5.start()

    crawler_t1.join()
    crawler_t2.join()
    crawler_t3.join()
    crawler_t4.join()
    crawler_t5.join()

    finish = time.perf_counter()

    print(f'Finished in {round(finish-start, 2)} second(s)')






"""
a = ipaddress.ip_address('127.0.0.120')
b = ipaddress.ip_address('127.0.0.125')

sensor = True
while(sensor):
    if a == b:
        sensor = False
    print(a)
    try:
        status_code = requests.get('http://'+str(a))
        print(status_code)
    except:
        pass
    a += 1
    

"""